{"version":3,"sources":["./src/app/_interceptors/interceptorerror.interceptor.ts","./src/app/_forms/date-input/date-input.component.ts","./src/app/test-errors/test-errors.component.ts","./src/app/test-errors/test-errors.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/_services/account.service.ts","./src/app/prevent-unsaved-changes.guard.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/_guard/auth.guard.ts","./src/app/photo-editor/photo-editor.component.ts","./src/app/photo-editor/photo-editor.component.html","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/member-detail/member-detail.component.ts","./src/app/member-detail/member-detail.component.html","./src/app/server-error/server-error.component.html","./src/app/server-error/server-error.component.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/member-card/member-card.component.ts","./src/app/member-card/member-card.component.html","./src/app/_directive/has-role.directive.ts","./src/app/modals/roles-madal/roles-madal.component.ts","./src/app/modals/roles-madal/roles-madal.component.html","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/shared/shared.module.ts","./src/app/_services/message.service.ts","./src/app/admin-panel/admin-panel.component.html","./src/app/admin-panel/admin-panel.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/admin.guard.ts","./src/app/_forms/text-input/text-input.component.ts","./src/app/lists/lists.component.html","./src/app/lists/lists.component.ts","./src/app/member-list/member-list.component.html","./src/app/member-list/member-list.component.ts","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/_services/presence.service.ts","./src/app/member-messages/member-messages.component.html","./src/app/member-messages/member-messages.component.ts","./src/app/_models/userParams.ts","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/_services/paginationHelper.ts","./src/app/member-edit/member-edit.component.ts","./src/app/member-edit/member-edit.component.html","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ToastrService } from 'ngx-toastr';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\n\n\n@Injectable()\nexport class InterceptorerrorInterceptor implements HttpInterceptor {\n\n  constructor(private router : Router, private toastr : ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error =>{\n        if(error)\n        {\n          switch(error.status){\n            case 400:\n              if(error.error.errors)\n              {\n                const modelStateErrors=[];\n               \n                for (const key in error.error.errors) {            \n                \n                \n                  if(error.error.errors[key])\n                  {\n                    modelStateErrors.push(error.error.errors[key]);                   \n                    \n                  }\n\n                }\n                throw modelStateErrors.flat();\n              } else if(typeof(error.error) === 'object')\n              {\n                this.toastr.error(error.statusText,error.status);\n\n              }\n              else{\n                this.toastr.error(error.error,error.status);\n              }\n              break;\n              case 401:\n                this.toastr.error(error.statusText,error.status);\n                break;\n              case 404:\n                this.router.navigateByUrl('not-found');\n                break;\n              case 500:\n                const navigationExtras : NavigationExtras= {state :{error : error.error } };\n                this.router.navigateByUrl('server-error',navigationExtras);\n                break;\n\n              default:\n                this.toastr.error(\"Something unexpected went wrong!\");\n                console.log(error);\n                break;\n          }\n        }\n        return throwError(error);\n      })\n    )\n  }\n}\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n\n  @Input() label : string;\n  @Input() maxDate : Date;\n\n  \n\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(@Self() public ngCotrol : NgControl) { \n    this.ngCotrol.valueAccessor=this;\n    this.bsConfig = {\n      containerClass : 'theme-blue',\n      dateInputFormat : 'DD MMMM YYYY'\n    }\n  }\n  writeValue(obj: any): void {\n    \n  }\n  registerOnChange(fn: any): void {    \n  }\n\n  registerOnTouched(fn: any): void {    \n  }\n\n  setDisabledState?(isDisabled: boolean): void {    \n  }\n\n \n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n\n  baseUrl=environment.apiUrl;\n\n  validationError : String[] =[];\n\n\n  constructor(private http : HttpClient) { }\n\n  ngOnInit(): void {\n  }\n \n get404Error(){\n   this.http.get(this.baseUrl+\"Buggy/not-found\").subscribe(response =>{\n     console.log(response);\n   }, error => {\n     console.log(error);\n   })\n }\n\n get400Error(){\n  this.http.get(this.baseUrl+\"Buggy/bad-request\").subscribe(response =>{\n    console.log(response);\n  }, error => {\n    console.log(error);\n  })\n}\n\nget500Error(){\n  this.http.get(this.baseUrl+\"Buggy/server-error\").subscribe(response =>{\n    console.log(response);\n  }, error => {\n    console.log(error);\n  })\n}\n\nget401Error(){\n  this.http.get(this.baseUrl+\"Buggy/auth\").subscribe(response =>{\n    console.log(response);\n  }, error => {\n    console.log(error);\n  })\n}\n\nget400ValidationError(){\n  this.http.post(this.baseUrl+\"Account/register\",{}).subscribe(response =>{\n    console.log(response);\n  }, error => {\n    console.log(error);\n    this.validationError=error;\n    \n  })\n}\n\n}\n","<ng-container>\n    <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>  \n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button> \n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button> \n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button> \n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">Test 400 Validation Error</button> \n\n    <div class=\"row mt-3\" *ngIf=\"validationError.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationError\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n</ng-container>\n\n","import { Router } from '@angular/router';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  \n  @Output() cancelRegister= new EventEmitter();\n\n  registerForm = {} as FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n  maxDate: Date;\n  validationError : string[] =[];\n \n  constructor(private accountService : AccountService, private toastr : ToastrService ,\n    private fb : FormBuilder, private router : Router ) { \n     \n      this.bsConfig = {\n        containerClass : 'theme-blue',\n        dateInputFormat : 'DD MMMM YYYY'\n      }\n    \n  }\n\n  ngOnInit(): void {\n    this.initializeForm();\n\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n\n  initializeForm(){\n    this.registerForm= this.fb.group({\n      gender : ['',Validators.required],\n      username : ['',Validators.required],\n      knownAs : ['',Validators.required],\n      dateOfBirth : ['',Validators.required],\n      city : ['',Validators.required],\n      country : ['',Validators.required],      \n      password :['',[Validators.required,Validators.minLength(4),Validators.maxLength(8)]],\n      confirmPassword : ['',[Validators.required,this.matchValues('password')]],\n    });\n    this.registerForm.controls.password.valueChanges.subscribe( ()=>{\n      this.registerForm.controls.confirmPassword.updateValueAndValidity();\n    })\n  }\n  \n  matchValues(matchTo : string) : ValidatorFn {\n    return (control : AbstractControl) =>{\n      return control?.value === control?.parent?.controls[matchTo].value\n      ? null : {isMatching : true}\n    }\n  }\n\n  register(){\n    console.log(this.registerForm.value);\n    \n    this.accountService.register(this.registerForm.value).subscribe(response =>\n      {\n        this.router.navigateByUrl('members');       \n      }, error =>{\n        this.validationError= error;        \n      })\n  }\n\n  cancel()\n  {\n   this.cancelRegister.emit(false);\n  }\n\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\n    <h2 class=\"text-center text-primary\">Sign Up</h2>\n    <hr>\n    <div class=\"form-group\">\n        <label class=\"control-label\" style=\"margin-right: 10px;\">I am a:</label>\n        <label  class=\"radio-inline\">\n            <input type=\"radio\" value=\"male\" formControlName=\"gender\"> Male\n        </label>\n        <label  class=\"radio-inline\">\n            <input type=\"radio\" value=\"female\" formControlName=\"gender\" class=\"ml-3\"> Female\n        </label>\n        </div>\n\n\n\n    <div class=\"form-group\">\n        <input [class.is-invalid]='registerForm.get(\"username\").errors && registerForm.get(\"username\").touched'\n            type=text class=\"form-control\" formControlName=\"username\" placeholder=\"Username\" />\n        <div class=\"invalid-feedback\">Please enter a username</div>\n    </div>    \n    <div class=\"form-group\">\n        <input [class.is-invalid]='registerForm.get(\"knownAs\").errors && registerForm.get(\"knownAs\").touched'\n            type=text class=\"form-control\" formControlName=\"knownAs\" placeholder=\"Known As\" />\n        <div class=\"invalid-feedback\">Please enter a knownAs</div>\n    </div>   \n    <div class=\"form-group\">\n        <input [class.is-invalid]='registerForm.get(\"dateOfBirth\").errors && registerForm.get(\"dateOfBirth\").touched'\n            type=text class=\"form-control\" formControlName=\"dateOfBirth\" placeholder=\"date Of Birth\" \n            bsDatepicker\n            [bsConfig]=\"bsConfig\" \n             [maxDate]=\"maxDate\" />\n        <div class=\"invalid-feedback\">Please enter a date Of Birth</div>\n    </div>\n    <div class=\"form-group\">\n        <input [class.is-invalid]='registerForm.get(\"city\").errors && registerForm.get(\"city\").touched'\n            type=text class=\"form-control\" formControlName=\"city\" placeholder=\"city\" />\n        <div class=\"invalid-feedback\">Please enter a city</div>\n    </div>\n    <div class=\"form-group\">\n        <input [class.is-invalid]='registerForm.get(\"country\").errors && registerForm.get(\"country\").touched'\n            type=text class=\"form-control\" formControlName=\"country\" placeholder=\"country\" />\n        <div class=\"invalid-feedback\">Please enter a country</div>\n    </div>\n    <div class=\"form-group\">\n        <input [class.is-invalid]='registerForm.get(\"password\").errors && registerForm.get(\"password\").touched'\n            type=text class=\"form-control\" formControlName=\"password\" type=\"password\" placeholder=\"password\" />\n        <div *ngIf=\"registerForm.get('password').hasError('required')\" class=\"invalid-feedback\">Please enter a\n            Password</div>\n        <div *ngIf=\"registerForm.get('password').hasError('minlength')\" class=\"invalid-feedback\">Password must be\n            atleast 4 characters</div>\n        <div *ngIf=\"registerForm.get('password').hasError('maxlength')\" class=\"invalid-feedback\">Password at most 8\n            characters</div>\n    </div>\n    <div class=\"form-group\">\n        <input [class.is-invalid]='registerForm.get(\"confirmPassword\").errors \n                && registerForm.get(\"confirmPassword\").touched' type=text class=\"form-control\"\n            formControlName=\"confirmPassword\" placeholder=\"confirmPassword\" type=\"password\" />\n        <div *ngIf=\"registerForm.get('confirmPassword').hasError('required')\" class=\"invalid-feedback\">Please\n            enter a confirm Password</div>\n        <div *ngIf=\"registerForm.get('confirmPassword').hasError('isMatching')\" class=\"invalid-feedback\">Confirm\n            password muct be match with password</div>\n    </div>\n    <div class=\"row\" *ngIf=\"validationError.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationError\">\n                {{error}}\n            </li>\n        </ul>\n    </div>\n    <div class=\"form-group text-center\">\n        <button [disabled]=\"!registerForm.valid\" class=\"btn btn-success mr-2\" type=\"submit\">Register</button>\n        <button class=\"btn btn-default\" style=\"padding-left: 15px;\" type=\"button\" (click)=\"cancel()\">Cancel</button>\n    </div>\n\n</form>\n\n","<div class=\"row\" *ngIf=\"photos?.length === 0\">\n    <h4>No Photos for approval </h4>\n</div>\n\n<div class=\"row mt-3\" *ngIf=\"photos?.length > 0\">\n    <div class=\"col-2\" *ngFor=\"let photo of photos\">\n        <div> <h5>{{photo.username}}</h5></div>\n        <img src=\"{{photo.url || './assets/user.png'}}\" alt=\"{{photo.username}}\" class=\"card-img-top\"/>\n        <div class=\"card-body p-1\">\n            <h6 class=\"card-title text-center mb-1\">\n                <button (click)=\"approvePhoto(photo)\" class=\"btn btn-success\">Approve</button>\n                <button (click)=\"rejectPhoto(photo.id)\" class=\"btn btn-danger\">Reject</button>\n             </h6>\n        </div>\n    </div>\n</div>\n\n\n","import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Photo } from './../../_models/photo';\nimport { AdminService } from './../../_services/admin.service';\nimport { Component, OnInit } from '@angular/core';\nimport { RolesMadalComponent } from 'src/app/modals/roles-madal/roles-madal.component';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  photos : Partial<Photo[]>;\n  bsModalRef : BsModalRef;\n\n  constructor(private adminService : AdminService, private modalService : BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUnApprovedPhotos();\n  }\n\n  getUnApprovedPhotos()\n  {\n    this.adminService.getPhotosForApproval().subscribe(photo => {\n      this.photos= photo;\n    })\n  }\n\n  approvePhoto(photo : Photo)\n  {\n      this.adminService.approvePhoto(photo).subscribe( () =>{\n      this.photos.splice(this.photos.findIndex(m=> m.id === photo.id),1);\n\n    });     \n   \n\n  }\n\n  rejectPhoto(id : number)\n  {\n    this.adminService.rejectPhoto(id).subscribe(() =>{\n      this.photos.splice(this.photos.findIndex(m=> m.id === id),1);\n    });    \n  }\n\n}\n","import { PresenceService } from './presence.service';\nimport { User } from './../_models/user';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl=environment.apiUrl;\n private CurrentSourseUser =new ReplaySubject<User>(1);\n currentUser$ = this.CurrentSourseUser.asObservable();\n  \n\n  constructor(private http : HttpClient, private presence : PresenceService) {\n\n   }\n\n   login(model: User)\n   {\n    return this.http.post<User>(this.baseUrl + \"account/login\", model).pipe(\n      map((response : User) => {\n        const user= response;\n        if(user){\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n       })\n      ) \n   }\n\n   register(model: User)\n   {\n    return this.http.post<User>(this.baseUrl + \"account/register\", model).pipe(\n      map((response : User) => {\n        const user= response;\n        if(user){\n        this.setCurrentUser(user);   \n        this.presence.createHubConnection(user);     \n        } return user;\n       })\n      ) \n   }\n\n   setCurrentUser(user : User)\n   {\n     user.roles=[];\n     const roles= this.getDecodeToken(user.token).role;\n     Array.isArray(roles) ? user.roles= roles : user.roles.push(roles);\n     localStorage.setItem(\"user\", JSON.stringify(user));\n     this.CurrentSourseUser.next(user);\n   }\n\n   logout(){\n     localStorage.removeItem(\"user\");\n     this.CurrentSourseUser.next(null);\n     this.presence.stopHubConnection();\n   }\n\n   getDecodeToken(token){\n     //console.log(window.atob(token.split('.')[1]));\n     return JSON.parse(window.atob(token.split('.')[1]));\n\n   }\n\n}\n","import { ConfirmService } from './_services/confirm.service';\nimport { MemberEditComponent } from './member-edit/member-edit.component';\nimport { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n\n constructor(private confirmService : ConfirmService){}\n\n  canDeactivate(\n    component: MemberEditComponent):  Observable<boolean> | boolean {\n      if(component.editForm.dirty)\n      {\n        return this.confirmService.confirm()\n      }\n    return true;\n  }\n  \n}\n","<div  class=\"container mt-5\">\n <div style=\"text-align: center;\" *ngIf=\"!registerMode\">\n    <h1>find your match</h1>\n    <p class=\"lead\">Come on in to view your matches... all you need to do is sign up!</p>\n    <div class=\"text-center\">\n        <button class=\"btn btn-primary btn-lg mg-2\" (click)=\"registerToggle()\">Register</button>\n        <button class=\"btn btn-info btn-lg mg-2\">Learn More</button>\n    </div>\n</div>\n\n<div *ngIf=\"registerMode\" class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-4\">\n            <app-register (cancelRegister)=\"cancelEmitter($event)\"></app-register>            \n        </div>\n    </div>\n</div>\n\n</div>\n\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  registerMode =false;\n  users : any = {};\n\n  constructor() {\n \n    }\n   \n \n\n  ngOnInit(): void {\n  }\n\n  registerToggle(){\n    this.registerMode = ! this.registerMode;\n  }\n\n  cancelEmitter(event : boolean){\n    this.registerMode= event;\n  }\n\n}\n","import { ToastrService } from 'ngx-toastr';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\nconstructor(private accountService : AccountService, private toastr : ToastrService) { }\n\n  canActivate(): Observable<boolean> \n   {\n     return this.accountService.currentUser$.pipe(\n       map(user => {\n         if(user) return true;\n         this.toastr.error(\"You shall not pass!\");\n         return false;\n       })\n       );    \n  }\n  \n}\n","import { MembersService } from './../_services/members.service';\nimport { Photo } from './../_models/photo';\nimport { AccountService } from './../_services/account.service';\nimport { Member } from './../_models/member';\nimport { Component, Input, OnInit } from '@angular/core';\nimport {FileUploader} from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\nimport { UseExistingWebDriver } from 'protractor/built/driverProviders';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n\n  @Input() member = {} as Member;\n  uploader ={} as FileUploader;\n  hasBaseDropZoneOver= false;\n  baseUrl= environment.apiUrl;\n  user={} as User;\n\n  constructor(private accountService: AccountService, private memberService : MembersService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user=user);\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n SetMainPhoto(Photo : Photo)\n {\n   this.memberService.setMainPhoto(Photo.id).subscribe( () =>\n   {\n     this.user.photoUrl=Photo.url;\n     this.accountService.setCurrentUser(this.user);\n     this.member.photoUrl=Photo.url;\n\n     this.member.photos.forEach( p=>{\n       if(p.isMain) p.isMain=false;\n       if(p.id=== Photo.id) p.isMain=true;\n     })\n   })\n\n }\n\n\n  fileOverBase(e : any) {\n    this.hasBaseDropZoneOver=e;\n  }\n\n  initializeUploader()\n  {\n    this.uploader=new FileUploader({\n      url: this.baseUrl+'users/add-photo',\n      authToken: 'Bearer '+this.user.token,\n      isHTML5: true,\n      allowedFileType:['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize : 10 * 1024 * 1024\n    });\n    \n\n    this.uploader.onAfterAddingFile=(file) =>\n    {\n      file.withCredentials=false;\n    }\n\n    this.uploader.onSuccessItem=(item,response,status,headers) =>\n    {\n      if(response)\n      {\n        const photo : Photo= JSON.parse(response);\n        this.member.photos.push(photo);\n        if(photo.isMain)\n        {\n          this.user.photoUrl=photo.url;\n          this.member.photoUrl=photo.url;\n        }\n\n\n      }\n    }\n  }\n\n  deletePhoto(photoId : number)\n    {\n      this.memberService.deletePhoto(photoId).subscribe (() =>{\n    //  this.member.photos= this.member.photos.filter(x=> x.id !== photoId);\n      this.member.photos.splice(this.member.photos.findIndex(m=> m.id === photoId),1);\n\n      });\n    }\n\n  \n\n}\n","<div class=\"row\">\n    <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\n        <div class=\"container\" *ngIf=\"!photo.isApproved\">\n            <div class=\"blurr\">\n            <img  src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\"/></div>\n            <div class=\"centered \" *ngIf=\"!photo.isApproved\">Awaiting for Approval </div>  \n            <button (click)=\"deletePhoto(photo.id)\"\n             class=\"btn btn-sm btn-danger\"> <i class=\"fa fa-trash\"></i></button>\n                    \n        </div>\n        <div *ngIf=\"photo.isApproved\">\n        <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\"/>\n               <div class=\"text center\" *ngIf=\"photo.isApproved\">\n            <button [disabled]=\"photo.isMain && !photo.isApproved\"\n            (click)=\"SetMainPhoto(photo)\"\n            [ngClass]='photo.isMain ? \"btn btn-success active\" : \"btn-outline-success\"'\n            class=\"btn btn-sm\"> \n            Main</button>\n            <button [disabled]=\"photo.isMain\"\n            (click)=\"deletePhoto(photo.id)\"\n             class=\"btn btn-sm btn-danger\"> <i class=\"fa fa-trash\"></i></button>\n            </div>\n        </div>\n\n    </div>\n\n</div>\n\n<div class=\"row mt-3\">\n \n    <div class=\"col-md-3\">\n\n        <h3>Add Photos</h3>\n\n        <div ng2FileDrop\n             [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n             (fileOver)=\"fileOverBase($event)\"\n             [uploader]=\"uploader\"\n             class=\"well my-drop-zone\">\n            Base drop zone\n        </div>\n\n        <div ng2FileDrop\n             [ngClass]=\"{'another-file-over-class': hasBaseDropZoneOver}\"\n             (fileOver)=\"fileOverBase($event)\"\n             [uploader]=\"uploader\"\n             class=\"card bg-faded p-3 text-center mb-3 well my-drop-zone\">\n             <i class=\"fa fa-upload fa-3x\"></i>\n            Drop Photos here\n        </div>\n\n        Multiple\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n        Single\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n    </div>\n\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n        <h3>Upload queue</h3>\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n        <table class=\"table\">\n            <thead>\n            <tr>\n                <th width=\"50%\">Name</th>\n                <th>Size</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let item of uploader.queue\">\n                <td><strong>{{ item?.file?.name }}</strong></td>\n                <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n                               \n            </tr>\n            </tbody>\n        </table>\n\n        <div>\n            <div>\n                Queue progress:\n                <div class=\"progress\" style=\"\">\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-success btn-s\"\n                    (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                <span class=\"fa fa-upload\"></span> Upload all\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-s\"\n                    (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                <span class=\"fa fa-ban\"></span> Cancel all\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-s\"\n                    (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                <span class=\"fa fa-trash\"></span> Remove all\n            </button>\n        </div>\n\n    </div>\n\n</div>\n","export interface Pagination {\r\n    currentPage : number;\r\n    itmesPerPage : number;\r\n    totalPages : number;\r\n    totalItems : number;\r\n}\r\n\r\nexport class PaginationResult<T>\r\n{\r\n    result : T;\r\n    pagination : Pagination;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:\"http://localhost:49716/api/\",\n  hubUrl : \"http://localhost:49716/hubs/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService : AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n     let currentUser : any;\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user =>  currentUser = user);\n\n   if(currentUser)\n    {\n      request= request.clone({\n        setHeaders :{\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      })\n    }\n\n    return next.handle(request);\n  }\n}\n","import { take } from 'rxjs/operators';\nimport { AccountService } from './../_services/account.service';\nimport { MessageService } from './../_services/message.service';\nimport { Member } from './../_models/member';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { Message } from '../_models/message';\nimport { PresenceService } from '../_services/presence.service';\nimport { User } from '../_models/user';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit,OnDestroy {\n  @ViewChild('memberTabsets',{static : true} ) memberTabsets : TabsetComponent;\n\n  member ={} as Member;\n  galleryOptions: NgxGalleryOptions[]=[];\n  galleryImages: NgxGalleryImage[]=[];\n  activeTab :TabDirective;\n  messages : Message[]=[];\n  user : User;\n\n  constructor(public presence : PresenceService, private route : ActivatedRoute \n    , private messageService : MessageService, private accountService : AccountService , \n    private router : Router) {\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user=user);\n      this.router.routeReuseStrategy.shouldReuseRoute = ()=> false;\n     }\n \n  ngOnInit(): void {\n    \n    this.route.data.subscribe(data => {\n      console.log(\"route.data : \"+ JSON.stringify(data));\n      this.member = data.member;\n    })\n\n    this.route.queryParams.subscribe( params => {\n      console.log(\"params : \"+params.tabs);\n      params.tabs ? this.selectTab(params.tabs) : this.selectTab(0);\n    })\n\n    this.galleryOptions = [\n      {\n        width : '500px',\n        height : '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation : NgxGalleryAnimation.Slide,\n        preview: false\n\n      }\n    ]\n    this.galleryImages= this.getImages();  \n\n  }\n\n getImages() : NgxGalleryImage[] \n {\n   const imgUrls=[];\n   for(const image of this.member.photos)\n   {\n     imgUrls.push({\n       small: image?.url,\n       medium: image?.url,\n       big: image?.url\n     })\n   }\n   return imgUrls;\n }\n \n  onTabActivates(data : TabDirective)\n  {\n    this.activeTab=data;\n    if(this.activeTab.heading ==='Messages' && this.messages.length === 0)\n    {\n      this.messageService.createConnection(this.user,this.member.username)\n    }\n    else{\n      this.messageService.stopConnection();\n    }\n  }\n\n  selectTab(tabId : number)\n  {\n    this.memberTabsets.tabs[tabId].active=true;\n  }\n\n  loadMessages()\n  {\n    this.messageService.getMessageThread(this.member.username).subscribe(response => {\n      this.messages=response;\n\n    })\n  }\n\n  ngOnDestroy(): void {\n   \n    this.messageService.stopConnection();\n  }\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-4\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \n            class=\"card-img-top img-thumbnail\">\n            <div class=\"card-body\">\n                <div class=\"mb-2\" *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\">  \n                    <span><i class=\"fa fa-user-cirlce text-success\"></i></span>Online now\n                </div>\n                <strong>Location: </strong>\n                <p>{{member.city}},{{member.country}}</p>\n            </div>\n            <div class=\"card-body\">\n                <strong>Age: </strong>\n                <p>{{member.age}}</p>\n            </div>\n            <div class=\"card-body\">\n                <strong>Last Active: </strong>\n                <p>{{member.lastActive | timeago}}</p>\n            </div>\n            <div class=\"card-body\">\n                <strong>Member since: </strong>\n                <p>{{member.created | date : 'dd MMM YYYY'}}</p>\n            </div>\n        </div>\n        <div class=\"card-footer\">   \n            <div class=\"btn-group d-flex\">  \n                <button class=\"btn btn-primary\">Like</button>         \n                <button (click)=\"selectTab(3)\" class=\"btn btn-success\">Message</button>        \n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-8\">\n        <tabset class=\"member-tabset\" #memberTabsets>\n            <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivates($event)\" >\n                <h4>Description</h4>\n                <p>{{member.introduction}}</p>\n                <h4>Looking For</h4>\n                <p>{{member.lookingFor}}</p>\n            </tab>\n            <tab heading='Interests' (selectTab)=\"onTabActivates($event)\">\n                <h4>Interests</h4>\n                <p>{{member.interests}}</p>              \n            </tab>\n            <tab heading='Photos' (selectTab)=\"onTabActivates($event)\">                \n                <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\"\n                style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>             \n            </tab>\n            <tab heading='Messages' (selectTab)=\"onTabActivates($event)\">                \n                <app-member-messages  [username]='member.username'></app-member-messages>            \n            </tab>\n\n        </tabset>\n    </div>\n\n\n\n</div>\n\n\n\n","<h4>Internal Server error - refreshing the page will make the error disappear</h4>\n<ng-container *ngIf=\"error\">\n    <h5 class=\"text-danger\">Error : {{error.message}}</h5>\n    <p class=\"text-weight-bold\">Note : If you are seeing this error then Angular is not probably blame</p>\n    <p>What to do next?</p>\n    <ol>\n        <li>open the chrome dev tool</li>\n        <li>check the network tab</li>\n        <li>check the failing request</li>\n        <li>Examine url make sure it's correct</li>\n        <li>Test the url via Postman </li>        \n    </ol>\n    <p> Following is the stack trace - this is where your investigation start!</p>\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\" >{{error.details}}</code>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n\n  error : any;\n\n  constructor(private router : Router) { \n    const navigation= this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row mb-4\">  \n    <div class=\"btn-group\" name=\"container\"> \n        <button class=\"btn btn-primary\" btnRadio=\"Unread\" [(ngModel)]=\"container\" (click)=\"loadMessages()\">  \n            <i class=\"fa fa-envelope\"></i>  Unread\n        </button>\n        <button class=\"btn btn-primary\" btnRadio=\"Inbox\" [(ngModel)]=\"container\" (click)=\"loadMessages()\">  \n            <i class=\"fa fa-envelope-open\"></i>  Inbox\n        </button>\n        <button class=\"btn btn-primary\" btnRadio=\"Outbox\" [(ngModel)]=\"container\" (click)=\"loadMessages()\">  \n            <i class=\"fa fa-paper-plane\"></i>  Outbox\n        </button>\n\n    </div>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\n    <h2>No Messages </h2>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length > 0\">   \n    <table class=\"table table-hover\" style=\"cursor: pointer;\">  \n       <tr>\n        <th style=\"width: 40%;\">Messages</th>        \n        <th style=\"width: 20%;\"> From / To</th>   \n        <th style=\"width: 20%;\">Sent / Received </th>   \n        <th style=\"width: 20%;\"> </th>          \n        \n    </tr>\n    <tr *ngFor=\"let message of messages\" [hidden]='loadingFlag'\n     routerLink=\"{{container === 'Outbox' ? \n     '/members/'+ message.recepientUsername : '/members/'+ message.senderUsername}}\" \n     [queryParams]='{tabs:3}'>\n          <td>{{message.content}}</td>\n          <td>\n              <div *ngIf=\"container === 'Outbox'\">\n                  <img\n                  class=\"img-circle rounded-circle mr-2\"\n                  src=\"{{message.recepientPhotoUrl || '/asset/user.png'}}\" \n                  alt=\"{{message.recepientUsername}}\">\n                  <strong>{{message.recepientUsername}}</strong>\n              </div>\n              <div *ngIf=\"container === 'Inbox'\">\n                <img\n                class=\"img-circle rounded-circle mr-2\"\n                src=\"{{message.senderPhotoUrl || '/asset/user.png'}}\" \n                alt=\"{{message.senderUsername}}\">\n                <strong>{{message.senderUsername | titlecase}}</strong>\n            </div>\n          </td>\n          <td>{{message.messageSent | timeago}}</td>\n          <td>\n              <button (click)=\"$event.stopPropagation()\"  (click)=\"deleteMessage(message.id)\"  class=\"btn btn-danger\"> Delete</button>\n          </td>\n    </tr>\n     </table>\n</div>\n\n<div class=\"d-flex justify-content-center mt-3\" *ngIf=\"pagination && !loadingFlag && !(messages?.length === 0)\">\n    <pagination \n     [boundaryLinks]=\"true\"\n     [totalItems]=\"pagination.totalItems\" \n     [itemsPerPage]=\"pagination.itmesPerPage\"\n     [(ngModel)]=\"pagination.currentPage\"\n     (pageChanged)=\"pageChanged($event)\"\n     previousText=\"&lsaquo;\" \n     nextText=\"&rsaquo;\" \n     firstText=\"&laquo;\"\n     lastText=\"&raquo;\">\n\n    </pagination>\n</div>\n","import { ConfirmService } from './../_services/confirm.service';\nimport { MessageService } from './../_services/message.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination } from '../_models/pagination';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  messages : Message[];\n  pagination : Pagination;\n  container = 'Unread';\n  pageNumber =1;\n  pageSize=5;\n  loadingFlag = false;\n\n  constructor(private messageService :MessageService, private confirmService : ConfirmService) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages()\n  {\n    this.loadingFlag=true;\n    this.messageService.getMessage(this.pageNumber,this.pageSize,this.container).subscribe(response => {\n      this.messages=response.result;\n      this.pagination=response.pagination;\n      this.loadingFlag= false;\n    })\n  }\n\n  deleteMessage(id : number)\n  {\n    this.confirmService.confirm(\"Confirm delete message\", \"This cannot be undone\").subscribe(result => {\n      if(result)\n      {\n        this.messageService.deleteMessage(id).subscribe(() =>{\n          this.messages.splice(this.messages.findIndex(m=> m.id === id),1);\n        });\n      }\n    })\n  \n\n  }\n\n  pageChanged(event : any)\n  {\n    this.pageNumber=event.page;\n    this.loadMessages();\n  }\n\n}\n","import { ToastrService } from 'ngx-toastr';\nimport { MembersService } from './../_services/members.service';\nimport { Member } from './../_models/member';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { PresenceService } from '../_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n\n  \n  @Input() member: Member;\n\n  constructor(private memberService : MembersService, private toastr: ToastrService, public presence : PresenceService) { }\n\n  ngOnInit(): void {\n  }\n\n  addLike(member : Member)\n  {\n    this.memberService.addLike(member.username).subscribe(() => {\n      this.toastr.success(\"You have liked \"+ member.knownAs);\n    })\n  }\n \n\n}\n","<div class=\"card-mb-4\">\n    <div class=\"card-img-wrapper\">\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\"/>\n        <ul class=\"list-inline member-icons animate text-center\">\n            <li class=\"list-inline-item\">\n                <button class=\"btn btn-primary\">\n                <i class=\"fa fa-user\" routerLink=\"/members/{{member.username}}\"></i>\n            </button>\n            <li class=\"list-inline-item\"><button (click)=\"addLike(member)\" class=\"btn btn-primary\">\n                <i class=\"fa fa-heart\"></i>\n            </button>\n            <li class=\"list-inline-item\"><button class=\"btn btn-primary\"\n                routerLink='/members/{{member.username}}' [queryParams]='{tabs:3}'>\n                <i class=\"fa fa-envelope\"></i>\n            </button>\n            \n        </li>\n        </ul>\n    </div>\n    <div class=\"card-body p-1\">\n        <h6 class=\"card-title text-center mb-1\">\n            <span [class.is-online]=\"(presence.onlineUsers$ | async).includes(member.username)\" >\n                <i class=\"fa fa-user mr-2\"></i>\n            </span>\n            \n            {{member.knownAs}},{{member.age}}\n        </h6>\n    </div>\n    <p class=\"card-text text-muted text-center\">{{member.city}}</p>\n</div>\n","import { take } from 'rxjs/operators';\nimport { Directive, TemplateRef, ViewContainerRef, Input, OnInit } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\n\n@Directive({\n  selector: '[appHasRole]'  // *appHasRole  \n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole : string[];\n  user : User;\n\n  constructor(private viewcontainer : ViewContainerRef, private templateRef : TemplateRef<any>, \n    private accountService : AccountService) {\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user =>{\n        this.user=user;\n      })\n\n     }\n  ngOnInit(): void {\n    // clear the voew when no user roles\n\n    if(!this.user?.roles || this.user == null)\n    {\n      this.viewcontainer.clear();\n      return;\n    }\n\n    if(this.user?.roles.some(r=> this.appHasRole.includes(r)))\n    {\n      this.viewcontainer.createEmbeddedView(this.templateRef);\n    } else{\n      this.viewcontainer.clear();\n    }\n\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-madal',\n  templateUrl: './roles-madal.component.html',\n  styleUrls: ['./roles-madal.component.css']\n})\nexport class RolesMadalComponent implements OnInit {\n\n  @Input() userSelectedRoles = new EventEmitter();\n  user : User;\n  roles : any[];\n\n  constructor(public bsModalRef : BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  updateRoles()\n  {\n    this.userSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit Roles of {{user.username}}</h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n   <form #templateForm=\"ngForm\" id=\"roleForm\">\n       <div class=\"form-check\" *ngFor=\"let role of roles\"> \n           <input type=\"checkbox\"\n                class=\"form-input-control\"\n                [checked]=\"role.checked\"\n                value=\"role.name\"\n                (change)=\"role.checked = !role.checked\"\n                [disabled]=\"role.name == 'Admin' && user.username === 'Admin'\"\n           >\n           <label>{{role.name}}</label>\n\n       </div>\n\n\n   </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\n  </div>","import { Photo } from './../_models/photo';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http : HttpClient) { }\n\n  getUsersWithRoles()\n  {\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles')\n  }\n\n  updateUserRoles(username : string,roles : string[])\n  {\n    console.log( \"updateUserRoles\"+ JSON.stringify(roles));\n    return this.http.post(this.baseUrl + 'admin/edit-roles/'+ username +'?roles='+ roles ,{})\n  }\n\n  getPhotosForApproval()\n  {\n    return this.http.get<Partial<Photo[]>>(this.baseUrl + \"admin/GetPhotoForApproval\");\n  }\n\n  approvePhoto(photo : Photo)\n  {\n    return this.http.put(this.baseUrl + \"admin/ApprovePhoto\",photo);\n  }\n\n  rejectPhoto(id : number)\n  {\n    return this.http.delete(this.baseUrl + \"admin/reject-photo-byAdmin/\"+id);\n  }\n}\n","import { AdminService } from './../../_services/admin.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesMadalComponent } from 'src/app/modals/roles-madal/roles-madal.component';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n\n  users : Partial<User[]>;\n  bsModalRef : BsModalRef;\n\n  constructor(private adminService : AdminService, private modalService : BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n\n  getUsersWithRoles()\n  {\n    this.adminService.getUsersWithRoles().subscribe(users => {\n      this.users= users;      \n    })\n  }\n\n  openRolesModal(user : User)\n  {\n   const config= {\n     class: \"modal-dialogue-centered\",\n     initialState : {\n       user,\n       roles : this.getRolesArray(user)\n     }\n   }\n    this.bsModalRef = this.modalService.show(RolesMadalComponent,config);\n    this.bsModalRef.content.userSelectedRoles.subscribe(values => {\n      const rolesToUpdate = {\n        roles : [... values.filter(el => el.checked === true).map( el => el.name)]\n      };\n      if(rolesToUpdate)\n      {\n        this.adminService.updateUserRoles(user.username,rolesToUpdate.roles).subscribe( () => {\n          user.roles= [...rolesToUpdate.roles];\n        })\n\n      }\n\n    })\n  }\n\n  private getRolesArray(user : User)\n  {\n    const roles =[];\n    const userRoles= user.roles;\n    const availableRoles : any[] = [\n      { name:\"Admin\", value : \"Admin\" },\n      { name:\"Moderator\", value : \"Moderator\" },\n      { name:\"Member\", value : \"Member\" }\n    ];\n\n    availableRoles.forEach(role => {\n      let isMatch= false;\n      for(const userRole of userRoles)\n      {\n        if(role.name === userRole)\n        {\n          isMatch= true;\n          role.checked= true;\n          roles.push(role);\n          break;\n        }\n      }\n      if(!isMatch)\n      {\n        role.checked= false;\n        roles.push(role);\n      }\n    });\n\n    return roles;\n  }\n\n}\n","<div class=\"row\">   \n    <table class=\"table\">   \n        <tr>\n            <th style=\"width: 30%;\" >Username</th>\n            <th style=\"width: 40%;\" >Roles</th>\n            <th style=\"width: 30%;\" ></th>\n        </tr>\n        <tr *ngFor=\"let user of users\">\n            <td>{{user.username}}</td>\n            <td>{{user.roles}}</td>\n            <td><button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">Edit</button></td>\n        </tr>\n    </table>\n</div>","import { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastrModule } from 'ngx-toastr';\nimport {TabsModule} from 'ngx-bootstrap/tabs';\nimport {NgxGalleryModule} from '@kolkov/ngx-gallery';\nimport {FileUploadModule} from 'ng2-file-upload';\nimport {BsDatepickerModule} from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot( {\n      positionClass : 'toast-bottom-right'\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot(),\n    \n  ],\n    exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule\n    \n  ]\n})\nexport class SharedModule { }\n","import { take } from 'rxjs/operators';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport { HubConnection } from '@microsoft/signalr';\nimport { environment } from './../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { getPaginatedResult, getPaginationHeader } from './paginationHelper';\nimport { Message } from '../_models/message';\nimport { User } from '../_models/user';\nimport { BehaviorSubject } from 'rxjs';\nimport { Group } from '../_models/group';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  baseUrl = environment.apiUrl;\n  hubUrl = environment.hubUrl;\n\n  private hubConnection : HubConnection;\n  private messageSourceThread = new BehaviorSubject<Message[]>([]);\n  public messageThread$ = this.messageSourceThread.asObservable();\n\n  constructor(private http:HttpClient) { }\n\n createConnection(user : User, otherUsername : string)\n {\n   this.hubConnection= new HubConnectionBuilder()\n        .withUrl(this.hubUrl + \"message?user=\"+ otherUsername , {\n          accessTokenFactory : ()=> user.token         \n          \n        })\n        .withAutomaticReconnect()\n        .build();\n\n\n        this.hubConnection.start().catch(error => console.log(error));        \n\n        this.hubConnection.on(\"ReceiveMessageThread\" , messages =>{\n          this.messageSourceThread.next(messages);\n        });\n\n        this.hubConnection.on(\"NewMessage\", message => {\n          this.messageThread$.pipe(take(1)).subscribe(messages =>{\n            this.messageSourceThread.next([...messages,message]);\n          })\n        });\n\n        this.hubConnection.on(\"UpdatedGroup\", (group : Group) => {\n          if(group.connections.some(x=> x.username === otherUsername))\n          {\n            this.messageThread$.pipe(take(1)).subscribe(messages => {\n              messages.forEach(message =>{\n                if(!message.dateRead)\n                {\n                  message.dateRead= new Date(Date.now());\n                }    \n              })\n              this.messageSourceThread.next([...messages]);\n              \n            });\n          }\n        });\n   \n }\n\n  stopConnection()\n  {\n    if(this.hubConnection)\n    {\n    this.hubConnection.stop().catch(error => console.log(error));\n    }\n  }\n\n  getMessage(pageNumber,pageSize,container : string)\n  {\n    let params= getPaginationHeader(pageNumber,pageSize);\n    params= params.append(\"container\",container);\n    return getPaginatedResult<Message[]>(this.baseUrl + \"messages\",params,this.http);\n\n  }\n\n  getMessageThread(username : string)\n  {\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\n  }\n\n  async sendMessages(username : string, content : string)\n   {\n     return this.hubConnection.invoke(\"SendMessage\",{ RecepientUsername : username, content})\n     .catch(error => console.log(error));\n   }\n\n   deleteMessage(id : number)\n   {\n     return this.http.delete(this.baseUrl +'messages/' + id);\n   }\n\n\n}\n","<h2>Admin Panel</h2>\n<div class=\"tab-panel\"> \n    <tabset class=\"member-tabset\">\n     <tab heading=\"User Management\" *appHasRole='[\"Admin\"]'>\n        <div class=\"container\"> \n            <app-user-management></app-user-management>\n        </div>\n    </tab> \n    <tab heading=\"Photo Management\" *appHasRole='[\"Admin\",\"Moderator\"]'>\n        <div class=\"container\"> \n            <app-photo-management></app-photo-management>\n        </div>\n    </tab>\n        \n    </tabset>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { PresenceService } from './_services/presence.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AccountService } from './_services/account.service';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Dating App!';\n  users : any;\n \n\n  constructor(private accountservice : AccountService, private presence : PresenceService)\n  {\n    \n\n  }\n\n  ngOnInit()\n  {\n    this.setCurrentUser();\n            \n  }\n\n  setCurrentUser(){\n    const user  : any = localStorage.getItem(\"user\");\n\n    if(user)\n    {\n      this.accountservice.setCurrentUser(user);\n      this.presence.createHubConnection(user);\n    }\n    \n }\n\n \n}\n","<app-nav></app-nav>\n\n<div class=\"container\" style=\"padding-top: 50px;\">\n  <router-outlet></router-outlet>\n</div>\n\n\n","import { AccountService } from './account.service';\nimport { element } from 'protractor';\nimport { UserParams } from './../_models/userParams';\nimport { Member } from './../_models/member';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { of } from 'rxjs';\nimport { map, retry, take } from 'rxjs/operators';\nimport { PaginationResult } from '../_models/pagination';\nimport { User } from '../_models/user';\nimport { getPaginatedResult, getPaginationHeader } from './paginationHelper';\nimport { Message } from '../_models/message';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n  baseUrl= environment.apiUrl;\n  members : Member[]=[];  \n  memberCache = new Map();\n  user : User;\n  userParams : UserParams;\n\n  constructor(private http : HttpClient,private accountService : AccountService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(userValue => {\n      this.user = userValue;\n      this.userParams= new UserParams(userValue);\n\n    })\n  }\n\n  getUserParams()\n  {\n    return this.userParams;\n  }\n\n  setUserParams(params: UserParams){\n    this.userParams=params;\n  }\n\n  resetUserParams()\n  {\n    this.userParams=new UserParams(this.user);\n    return this.userParams;\n  }\n\n  addLike(username : string)\n  {\n    return this.http.post(this.baseUrl +\"likes/\" + username, {});\n  }\n\n  getLikes(predicate : string,pageNumber : number,itemPerPage: number )\n  {\n    let params= getPaginationHeader(pageNumber,itemPerPage)\n    params= params.append('predicate',predicate);\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl +\"likes\",params,this.http);\n  }\n\n\n  getMembers(userParams : UserParams) {  \n   // debugger;\n    console.log(Object.values(userParams).join('-'));\n    \n   var response= this.memberCache.get(Object.values(UserParams).join('-'));\n   if(response)\n   {     \n     return of(response);\n   }\n\n    let params= getPaginationHeader(userParams.pageNumber,userParams.pageSize);\n\n    params = params.append(\"minAge\", userParams.minAge.toString());\n    params = params.append(\"maxAge\", userParams.maxAge.toString());\n    params = params.append(\"gender\", userParams.gender);\n    params = params.append(\"orderBy\", userParams.orderBy);\n\n    return getPaginatedResult<Member[]>(this.baseUrl+'users',params , this.http)\n    .pipe(map(response =>{\n      this.memberCache.set(Object.values(userParams).join('-'),response);\n      return response;\n    }))\n  }  \n\n  getMember(username: string) {\n    \n    const member= [...this.memberCache.values()]\n        .reduce((arr,elem) => arr.concat(elem.result),[])\n        .find((member : Member) => member.username === username);\n\n        \n\n        if(member)\n        {\n          return of(member);\n        }\n       \n    return this.http.get<Member>(this.baseUrl+'Users/'+username); \n    \n   }\n\n   updateMember(member: Member)\n   {\n     return this.http.put(this.baseUrl+'Users',member).pipe(\n       map(() => {\n         const index= this.members.indexOf(member);\n         this.members[index]=member;\n       })\n     )\n   }\n\n   setMainPhoto(photoId : number)\n   {\n     return this.http.put(this.baseUrl+'Users/set-main-photo/'+photoId,{});     \n   }\n\n   deletePhoto(photoId : number)\n   {\n    return this.http.delete(this.baseUrl+'Users/delete-photo/'+photoId); \n   }\n\n   \n   \n}\n","import { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { InterceptorerrorInterceptor } from './_interceptors/interceptorerror.interceptor';\nimport { SharedModule } from './shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './member-list/member-list.component';\nimport { MemberDetailComponent } from './member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { TestErrorsComponent } from './test-errors/test-errors.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ServerErrorComponent } from './server-error/server-error.component';\nimport { MemberCardComponent } from './member-card/member-card.component';\nimport { MemberEditComponent } from './member-edit/member-edit.component';\nimport { PhotoEditorComponent } from './photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directive/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesMadalComponent } from './modals/roles-madal/roles-madal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesMadalComponent,\n    ConfirmDialogComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    SharedModule,    \n    \n  ],\n  providers: [ \n    {provide: HTTP_INTERCEPTORS, useClass: InterceptorerrorInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { MembersService } from './../_services/members.service';\nimport { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Member } from '../_models/member';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberDetailedResolver implements Resolve<Member> {\n\n  constructor(private memberService : MembersService) {\n\n  }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Member> {\n   // console.log(\"this.memberService.getMember :\"+JSON.stringify( this.memberService.getMember(route.queryParamMap.get('username'))));\n    return this.memberService.getMember(route.paramMap.get('username'));\n  }\n}\n","import { User } from './_models/user';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from './_services/account.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private accountService : AccountService , private toastr : ToastrService){\n\n  }\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if(user.roles.includes('Admin') || user.roles.includes('Moderator'))\n        {\n          return true;\n        }\n        this.toastr.error(\"You are not allowed to enter this area\");\n        return false;\n\n      })\n    )\n  }\n  \n}\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n\n  @Input() label : string;\n  @Input() type='text';\n\n  constructor(@Self() public ngControl : NgControl) {\n    this.ngControl.valueAccessor=this;\n   }\n  writeValue(obj: any): void {\n   \n  }\n  registerOnChange(fn: any): void {\n    \n  }\n  registerOnTouched(fn: any): void {\n    \n  }\n  \n\n  \n\n}\n","<div class=\"text-center mt-3\">  \n    <h2>{{predicate === 'liked' ? 'Members I like' : 'Members who like me'}}</h2>\n</div>\n\n\n<div class=\"container mt-3\">    \n    <div class=\"row\">   \n        <div class=\"btn-group\" name=\"predicate\"> \n            <button class=\"btn btn-primary\" \n            btnRadio='liked' [(ngModel)]=\"predicate\"\n            (click)=\"loadLikes()\">Members I like</button>\n            <div class=\"btn-group\" name=\"predicate\"> \n                <button class=\"btn btn-primary\" \n                btnRadio='likedBy' [(ngModel)]=\"predicate\"\n                (click)=\"loadLikes()\">Members who like me</button>\n\n        </div>\n    </div>\n\n    <div class=\"row mt-3\">  \n        <div class=\"col-2\" *ngFor=\"let member of members\"> \n        <app-member-card [member]=\"member\" ></app-member-card>\n         </div>\n    </div>\n</div>\n\n    <div class=\"d-flex justify-content-center mt-3\" *ngIf=\"pagination\">\n        <pagination \n         [boundaryLinks]=\"true\"\n         [totalItems]=\"pagination.totalItems\" \n         [itemsPerPage]=\"pagination.itmesPerPage\"\n         [(ngModel)]=\"pagination.currentPage\"\n         (pageChanged)=\"pageChanged($event)\"\n         previousText=\"&lsaquo;\" \n         nextText=\"&rsaquo;\" \n         firstText=\"&laquo;\"\n         lastText=\"&raquo;\">\n    \n        </pagination>\n    </div>\n\n\n\n\n\n","import { MembersService } from './../_services/members.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n\n  members : Partial<Member[]>;\n  predicate ='liked';\n  pageNumber=1;\n  pageSize=5;\n  pagination : Pagination\n\n\n  constructor(private memberService : MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes()\n  {\n    this.memberService.getLikes(this.predicate,this.pageNumber,this.pageSize).subscribe(response =>{\n      this.members=response.result;\n      this.pagination=response.pagination;\n    })\n  }\n\n  pageChanged(event : any)\n  {\n    this.pageNumber=event.pageNumber;\n    this.loadLikes();\n  }\n\n}\n","<div class=\"text-center mt-2\">\n<h2> Your Matches - {{pagination?.totalItems}} found</h2>    \n</div>\n\n<div class=\"container mt3\"> \n    <form #form=\"ngForm\" class=\"form-inline mt-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\n      <div class=\"form-group\">  \n          <label>From Age</label>\n          <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"minAge\"\n          [(ngModel)]=\"userParams.minAge\">\n      </div>\n\n      <div class=\"form-group px-2\">  \n        <label>From to</label>\n        <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"maxAge\"\n        [(ngModel)]=\"userParams.maxAge\">\n    </div>\n\n    <div class=\"form-group px-2\">  \n        <label>Show : </label>\n        <select name=\"gender\" style=\"width: 130px;\" [(ngModel)]=\"userParams.gender\" class=\"form-control ml-1\">\n            <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\" >\n                {{gender.display}}\n            </option>\n        </select>\n    </div>\n\n    <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters </button>\n    <button (click)=\"resetFilters()\" class=\"btn btn-info ml-1\" type=\"submit\">Reset Filters </button>\n     \n    <div class=\"col\">   \n    <div class=\"button-group float-right\">  \n        <button class=\"btn btn-primary\"\n        type=\"button\"\n         name=\"oderBy\"\n         (click)=\"loadMembers()\"\n         btnRadio=\"lastActive\"\n         [(ngModel)]=\"userParams.orderBy\">Last Active</button>\n    </div>\n    <div class=\"button-group float-right\">  \n        <button class=\"btn btn-primary\"\n        type=\"button\"\n         name=\"oderBy\"\n         (click)=\"loadMembers()\"\n         btnRadio=\"created\"\n         [(ngModel)]=\"userParams.orderBy\">Newest Member</button>\n    </div>\n</div>\n\n    </form>\n</div>\n\n\n<div class=\"row mt-3\">\n    <div *ngFor=\"let member of members\" class=\"col-2\">\n        <app-member-card [member]=\"member\"></app-member-card>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center mt-3\" *ngIf=\"pagination\">\n    <pagination \n     [boundaryLinks]=\"true\"\n     [totalItems]=\"pagination.totalItems\" \n     [itemsPerPage]=\"pagination.itmesPerPage\"\n     [(ngModel)]=\"pagination.currentPage\"\n     (pageChanged)=\"pageChanged($event)\"\n     previousText=\"&lsaquo;\" \n     nextText=\"&rsaquo;\" \n     firstText=\"&laquo;\"\n     lastText=\"&raquo;\">\n\n    </pagination>\n</div>","import { AccountService } from './../_services/account.service';\nimport { UserParams } from './../_models/userParams';\nimport { Observable } from 'rxjs';\nimport { MembersService } from './../_services/members.service';\nimport { Member } from './../_models/member';\nimport { Component, OnInit } from '@angular/core';\nimport { Pagination, PaginationResult } from '../_models/pagination';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n\n  members : Member[];\n  pagination : Pagination;\n  userParams : UserParams;\n  user = {} as User ;\n  genderList= [{value :'male',display :'Males'},{value :'female',display :'Females'}];\n\n\n  constructor(private memberService : MembersService) {\n     this.userParams=memberService.getUserParams();\n   }\n\n   loadMembers()\n   {\n    this.memberService.setUserParams(this.userParams);\n     this.memberService.getMembers(this.userParams)\n     .subscribe(response  =>{\n       this.members=response.result;\n       this.pagination= response.pagination;\n     });\n   }\n\n   pageChanged(event : any)\n   {\n     this.userParams.pageNumber=event.page;\n     this.memberService.setUserParams(this.userParams);\n     this.loadMembers();\n   }\n\n   resetFilters(){\n     this.userParams= this.memberService.resetUserParams();\n     this.loadMembers();\n   }\n\n\n\n\n\n  ngOnInit(): void {\n    this.loadMembers();\n    \n  }\n  \n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n    <div class=\"container\">             \n    <a class=\"navbar-brand\" routerLink=\"/home\" routerLinkActive=\"active\">Dating App</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\" >\n      <ul class=\"navbar-nav\">\n        <ng-container *ngIf=\"accountService.currentUser$ | async\" >\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/members\" routerLinkActive=\"active\">Members <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/lists\" routerLinkActive=\"active\">Lists</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/messages\" routerLinkActive=\"active\">Messages</a>\n        </li>    \n        <li *appHasRole='[\"Admin\",\"Moderator\"]' class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\">Admin</a>\n        </li> \n      </ng-container> \n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/errors\" routerLinkActive=\"active\">Errors</a>\n      </li> \n         \n      </ul>\n    \n    </div>\n    \n\n    <form #loginForm=\"ngForm\" *ngIf=\"(accountService.currentUser$ | async) === null\"  class=\"form-inline\"  (ngSubmit)=\"login()\" autocomplete=\"off\">\n        <input \n          name=\"userName\"\n          [(ngModel)]=\"model.userName\"\n          class=\"form-control mr-sm-2\"\n          type=\"text\" \n          placeholder=\"UserName\" >\n        <input \n         name=\"password\"\n        [(ngModel)]=\"model.password\"\n         class=\"form-control mr-sm-2\"\n         type=\"password\" \n         placeholder=\"Password\" >\n        <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n      </form>\n      <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\n        <img class=\"rounded-circle\" src=\"{{user.photoUrl || './assets/user.png'}} \" alt=\"{{user.username}}\" />\n        <a class=\"dropdown-toggle text-light ml-2\" dropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\n        <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n            <a class=\"dropdown-item\" routerLink='/member/edit'>Edit Profile</a>\n            <div class=\"divider dropdown-divider\"></div>\n            <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>            \n        </div>\n    </div> \n    </div>  \n  </nav>\n","import { Router, RouterModule } from '@angular/router';\nimport { AccountService } from './../_services/account.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  model: any = {};\n  loggedIn : boolean = false;\n \n\n  constructor(public accountService : AccountService , private router : Router ,\n   private toastr : ToastrService ) {    \n  \n  }\n\n  ngOnInit(): void {\n    \n  }\n  \n\n  login(){\n    this.accountService.login(this.model).subscribe( response => {\n      this.router.navigateByUrl('/members')\n     \n    })\n  }\n\n\n  logout()\n  {\n    this.accountService.logout();\n    this.router.navigateByUrl(' ')\n    \n  }\n\n\n  }\n","import { Group } from './../_models/group';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { User } from 'src/app/_models/user';\nimport { ToastrService } from 'ngx-toastr';\nimport { environment } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport {HubConnection,HubConnectionBuilder} from '@microsoft/signalr'\nimport { take } from 'rxjs/operators';\nimport { Message } from '../_models/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n\n  hubUrl = environment.hubUrl;\n  private hubConnection : HubConnection\n  private onlineUsersSource = new  BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr : ToastrService, private router : Router) { }\n\n  createHubConnection(user : User) {\n    this.hubConnection = new HubConnectionBuilder()\n    .withUrl(this.hubUrl + 'presence' , {\n      accessTokenFactory : () => user.token\n    })\n    .withAutomaticReconnect()\n    .build();\n\n    this.hubConnection.start()\n    .catch(error => console.log(error));\n\n    this.hubConnection.on(\"UserIsOnline\", username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames,username]);\n      });\n    })\n\n    this.hubConnection.on(\"UserIsOffline\", username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames.filter(x => x != username)]);\n      });\n    })\n\n    this.hubConnection.on(\"GetOnlineUsers\", (users : string[]) => {\n      this.onlineUsersSource.next(users);\n    })\n\n    this.hubConnection.on(\"NewMessageReceived\", ({username , knownAs})=> {\n      this.toastr.info(knownAs + \"has sent you a new message!\")\n      .onTap\n      .pipe(take(1))\n      .subscribe(() => this.router.navigateByUrl(\"/members/\" + username + \"?tab=3\"))\n    });\n\n   \n\n  }\n\n  stopHubConnection(){\n    this.hubConnection.stop().catch(error => console.log(error));\n  }\n\n\n}\n","<div class=\"card\">  \n    <div class=\"card-body\"> \n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\n            <h4>No message yet ... say hi by using below message box</h4>\n        </div>\n\n        <ul #scrollMe\n        style=\"overflow: scroll; height: 500px;\"\n        [scrollTop]=\"scrollMe.scrollHeight\"        \n        *ngIf=\"(messageService.messageThread$ | async)?.length > 0\" >\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\n                <div>\n                    <span class=\"chat-img float-right\">\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" \n                        alt=\"{{message.senderUsername}}\" >\n                    </span>\n                    <div class=\"chat-body\">\n                        <div class=\"header\">\n                            <small class=\"text-muted\">  \n                                <span class=\"fa fa-clock-o\"> {{message.messageSent | timeago}} </span>\n                                <span class=\"text-danger\" *ngIf=\"!message.dateRead\n                                 && message.senderUsername !== username\" >\n                                (Unread)\n                                </span>\n                                <span class=\"text-success\" *ngIf=\"message.dateRead\n                                && message.senderUsername !== username\" >\n                               (read {{message.dateRead | timeago}})\n                               </span>\n                            </small>\n                        </div>\n                        <p>{{message.content}}</p>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </div>\n    <div class=\"footer\">\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\n            <div class=\"input-group\">\n                <input type=\"text\" name=\"messageContent\" class=\"form-control\" [(ngModel)]='messageContent' placeholder=\"send a private message\">\n                <div class=\"input-group-append\">    \n                    <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\" type=\"submit\">Send</button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","import { NgForm } from '@angular/forms';\nimport { MessageService } from './../_services/message.service';\nimport { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Message } from '../_models/message';\n\n@Component({\n  changeDetection : ChangeDetectionStrategy.OnPush,\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n\n  @Input('username') username: string;\n  messageContent : string;\n  @ViewChild('messageForm') messageForm: NgForm;\n\n\n  @Input('messages') messages : Message[];\n\n  constructor(public messageService : MessageService) { }\n\n  ngOnInit(): void {  \n  }\n\n  sendMessage()\n  {\n    this.messageService.sendMessages(this.username,this.messageContent).then(() => {     \n      this.messageForm.reset();\n    })\n  }\n\n \n\n}\n","import { User } from './user';\r\nexport class UserParams\r\n{\r\n    gender : string;\r\n    minAge=18;\r\n    maxAge=99;\r\n    pageNumber =1;\r\n    pageSize=5;\r\n    orderBy: 'lastActive';\r\n\r\n    constructor(user : User) {\r\n        this.gender= user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h3> Not-Found</h3>\n    <button class=\"btn btn-info btn-lg\" routerLink=' '>Return to home page</button>\n    </div>\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { PaginationResult } from \"../_models/pagination\";\r\n\r\n\r\nexport function getPaginatedResult<T>(url,params,http : HttpClient){\r\n    const paginationResult : PaginationResult<T>=new PaginationResult<T>();\r\n\r\n    return http.get<T>(url,{observe:'response',params}).pipe(\r\n      map(response=>{\r\n        paginationResult.result=response.body;\r\n \r\n        if(response.headers.get(\"Pagination\") !== null)\r\n        {\r\n         paginationResult.pagination= JSON.parse(response.headers.get(\"Pagination\"));\r\n        }    \r\n        return paginationResult;  \r\n      })          \r\n    )  \r\n  }\r\n\r\n  export function getPaginationHeader(page : number, itemPerPage : number){\r\n    let params= new HttpParams();\r\n\r\n      params = params.append(\"PageNumber\", page.toString());\r\n      params = params.append(\"PageSize\", itemPerPage.toString());\r\n\r\n      return params;\r\n  }","import { ToastrService } from 'ngx-toastr';\nimport { MembersService } from './../_services/members.service';\nimport { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\nimport { take } from 'rxjs/operators';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n\n  @ViewChild('editForm') editForm ={} as NgForm;\n\n  member ={} as Member;\n  user ={} as User;\n\n  @HostListener('window:beforeunload',['$event']) unloadNotification($event: any)\n  {\n    if(this.editForm.dirty)\n    {\n      $event.returnValue=true;\n    }\n  }\n\n  constructor(private accountService : AccountService,private memberService : MembersService, \n    private toastr : ToastrService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user=user);\n\n\n  }\n\n  ngOnInit(): void {\n\n    this.loadMember();\n  }\n\n  loadMember()\n  {\n    this.memberService.getMember(this.user.username).subscribe(member=> this.member=member);\n  }\n\n  updateMember()\n  {\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.toastr.success('Profile Updated Successfully');\n      this.editForm.reset(this.member);\n\n    })\n    \n  }\n\n}\n","<div class=\"row\" *ngIf=\"member\">\n    <div class=\"col-4\">\n        <h4>Your Profile</h4>\n    </div>\n    <div class=\"col-8\">\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n            <strong>Information :</strong>You have made change. any unsaved changes will be lost\n\n        </div>\n    </div>\n    <div class=\"col-4\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\"\n                class=\"card-img-top img-thumbnail\">\n            <div class=\"card-body\">\n                <strong>Location: </strong>\n                <p>{{member.city}},{{member.country}}</p>\n            </div>\n            <div class=\"card-body\">\n                <strong>Age: </strong>\n                <p>{{member.age}}</p>\n            </div>\n            <div class=\"card-body\">\n                <strong>Last Active: </strong>\n                <p>{{member.lastActive | timeago}}</p>\n            </div>\n            <div class=\"card-body\">\n                <strong>Member since: </strong>\n                <p>{{member.created | date : 'dd MMM yyyy'}}</p>\n            </div>\n        </div>\n        <div class=\"card-footer\">\n            <button [disabled]=\"!editForm.dirty\" form=\"editForm\" class=\"btn btn-success btn-block\">Save Changes</button>\n\n        </div>\n    </div>\n\n    <div class=\"col-8\">\n        <tabset class=\"member-tabset\">\n            <tab heading='About {{member.knownAs}}'>\n                <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\n                    <h4>Description</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Looking For</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Interests</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Location Details: </h4>\n                    <div class=\"form-inline\">\n                        <label for=\"city\">City</label>\n                        <input [(ngModel)]=\"member.city\" class=\"form-control mx-2\" type=\"text\" name=\"city\" />\n                        <label for=\"country\">Country</label>\n                        <input [(ngModel)]=\"member.country\" class=\"form-control mx-2\" type=\"text\" name=\"country\" />\n\n                    </div>\n                </form>\n\n            </tab>\n            <tab heading='Edit Photo'>               \n                <app-photo-editor [member]=member></app-photo-editor>                \n            </tab>\n         \n\n        </tabset>\n    </div>\n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  title : string;\n  message : string;\n  btnOkText: string;\n  btnCancelText : string;\n  result : boolean;\n\n  constructor( public bsModelRef : BsModalService) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm()\n  {\n    this.result= true;\n    this.bsModelRef.hide();\n  }\n\n  decline()\n  {\n    this.result= false;\n    this.bsModelRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\n  </div>\n  <div class=\"modal-body\">\n   <p>{{message}}</p>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOkText}}</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\n  </div>\n","import { AdminGuard } from './admin.guard';\nimport { AdminPanelComponent } from './admin-panel/admin-panel.component';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\nimport { PreventUnsavedChangesGuard } from './prevent-unsaved-changes.guard';\nimport { MemberEditComponent } from './member-edit/member-edit.component';\nimport { ServerErrorComponent } from './server-error/server-error.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { TestErrorsComponent } from './test-errors/test-errors.component';\nimport { MemberDetailComponent } from './member-detail/member-detail.component';\nimport { MemberListComponent } from './member-list/member-list.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes, CanActivate } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AuthGuard } from './_guard/auth.guard';\n\nconst routes: Routes = [\n  {path : ' ' , component :HomeComponent},\n  {   \n    path : '' , \n    runGuardsAndResolvers : 'always',\n    canActivate : [AuthGuard],\n    children:[      \n      {path : 'members' , component :MemberListComponent},\n      {path : 'members/:username' , component : MemberDetailComponent , resolve : {member : MemberDetailedResolver} },\n      {path : 'member/edit' , component : MemberEditComponent , canDeactivate: [PreventUnsavedChangesGuard] },\n      {path : 'lists' , component :ListsComponent},\n      {path : 'messages' , component :MessagesComponent},\n      {path : 'admin' , component :AdminPanelComponent, canActivate:[AdminGuard] },\n    ]\n  }, \n  {path : 'errors', component : TestErrorsComponent},  \n  {path : 'not-found', component : NotFoundComponent},\n  {path : 'server-error', component : ServerErrorComponent},\n  {path : '**' , component :HomeComponent , pathMatch : 'full'},\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { observable, Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from './../modals/confirm-dialog/confirm-dialog.component';\nimport { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\n\n  bsModelRef : BsModalRef;\n\n  constructor( private modalService : BsModalService) { }\n\n  confirm(title = \"Confirmation\", \n  message =\"Are you sure want to do this\",\n  btnOkText=\"Ok\", \n  btnCancelText=\"Cancel\") : Observable<boolean>\n  {\n    const config= {\n      initialState :{\n      title,\n      message,\n      btnOkText,\n      btnCancelText\n\n    }\n  }\n  this.bsModelRef= this.modalService.show(ConfirmDialogComponent, config);\n\n  return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult()\n  {\n    return (observer) =>{\n      const subscription = this.bsModelRef.onHidden.subscribe(() => {\n        observer.next(this.bsModelRef.content.result);\n        observer.complete();\n\n      });\n\n      return {\n        unsubscribe() {\n         subscription.unsubscribe();\n        }\n      }\n    }\n  }\n  \n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}